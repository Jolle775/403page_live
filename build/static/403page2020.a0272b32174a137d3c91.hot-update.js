webpackHotUpdate("403page2020",{

/***/ "./packages/fourothree/src/components/styles/global-styles.js":
/*!********************************************************************!*\
  !*** ./packages/fourothree/src/components/styles/global-styles.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var _fonts_inter_Inter_Medium_woff2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../fonts/inter/Inter-Medium.woff2 */ \"./packages/fourothree/src/fonts/inter/Inter-Medium.woff2\");\n/* harmony import */ var _fonts_inter_Inter_Medium_woff2__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_fonts_inter_Inter_Medium_woff2__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _fonts_inter_Inter_Bold_woff2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../fonts/inter/Inter-Bold.woff2 */ \"./packages/fourothree/src/fonts/inter/Inter-Bold.woff2\");\n/* harmony import */ var _fonts_inter_Inter_Bold_woff2__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_fonts_inter_Inter_Bold_woff2__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _fonts_inter_Inter_SemiBold_woff2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../fonts/inter/Inter-SemiBold.woff2 */ \"./packages/fourothree/src/fonts/inter/Inter-SemiBold.woff2\");\n/* harmony import */ var _fonts_inter_Inter_SemiBold_woff2__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_fonts_inter_Inter_SemiBold_woff2__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _fonts_inter_Inter_Medium_US_ASCII_woff2__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../fonts/inter/Inter-Medium-US-ASCII.woff2 */ \"./packages/fourothree/src/fonts/inter/Inter-Medium-US-ASCII.woff2\");\n/* harmony import */ var _fonts_inter_Inter_Medium_US_ASCII_woff2__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_fonts_inter_Inter_Medium_US_ASCII_woff2__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _fonts_inter_Inter_Bold_US_ASCII_woff2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../fonts/inter/Inter-Bold-US-ASCII.woff2 */ \"./packages/fourothree/src/fonts/inter/Inter-Bold-US-ASCII.woff2\");\n/* harmony import */ var _fonts_inter_Inter_Bold_US_ASCII_woff2__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_fonts_inter_Inter_Bold_US_ASCII_woff2__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _fonts_inter_Inter_SemiBold_US_ASCII_woff2__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../fonts/inter/Inter-SemiBold-US-ASCII.woff2 */ \"./packages/fourothree/src/fonts/inter/Inter-SemiBold-US-ASCII.woff2\");\n/* harmony import */ var _fonts_inter_Inter_SemiBold_US_ASCII_woff2__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_fonts_inter_Inter_SemiBold_US_ASCII_woff2__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _fonts_inter_Inter_Medium_LATIN_woff2__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../fonts/inter/Inter-Medium-LATIN.woff2 */ \"./packages/fourothree/src/fonts/inter/Inter-Medium-LATIN.woff2\");\n/* harmony import */ var _fonts_inter_Inter_Medium_LATIN_woff2__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_fonts_inter_Inter_Medium_LATIN_woff2__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _fonts_inter_Inter_Bold_LATIN_woff2__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../fonts/inter/Inter-Bold-LATIN.woff2 */ \"./packages/fourothree/src/fonts/inter/Inter-Bold-LATIN.woff2\");\n/* harmony import */ var _fonts_inter_Inter_Bold_LATIN_woff2__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_fonts_inter_Inter_Bold_LATIN_woff2__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _fonts_inter_Inter_SemiBold_LATIN_woff2__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../fonts/inter/Inter-SemiBold-LATIN.woff2 */ \"./packages/fourothree/src/fonts/inter/Inter-SemiBold-LATIN.woff2\");\n/* harmony import */ var _fonts_inter_Inter_SemiBold_LATIN_woff2__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_fonts_inter_Inter_SemiBold_LATIN_woff2__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _imagebg_png__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./imagebg.png */ \"./packages/fourothree/src/components/styles/imagebg.png\");\n/* harmony import */ var _imagebg_png__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_imagebg_png__WEBPACK_IMPORTED_MODULE_10__);\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var cssReset= false?undefined:{name:\"1yctk6c-cssReset\",styles:\"html,body{border:none;margin:0;padding:0;}h1,h2,h3,h4,h5,h6,p,blockquote,address,big,cite,code,em,font,img,small,strike,sub,sup,li,ol,ul,fieldset,form,label,legend,button,table,caption,tr,th,td{border:none;font-size:inherit;line-height:inherit;margin:0;padding:0;text-align:inherit;}blockquote::before,blockquote::after{content:\\\"\\\";}a,path{transition:all 0.15s linear;};label:cssReset;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref= false?undefined:{name:\"ey4khv\",styles:\"html{font-size:62.5%;}body{background-image:url(static/images/imagebg.png) width=\\\"100%\\\";background-repeat:no-repeat;background-attachment:fixed;box-sizing:border-box;color:#ffffff;font-family:\\\"Inter\\\",-apple-system,BlinkMacSystemFont,\\\"Helvetica Neue\\\",Helvetica,sans-serif;font-size:1.8rem;letter-spacing:-0.015em;text-align:left;}*,*::before,*::after{box-sizing:inherit;-webkit-font-smoothing:antialiased;word-break:break-word;word-wrap:break-word;}#site-content{overflow:hidden;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var documentSetup=colors=>_ref;function getFontSrc(fontSet,fonts){var[defaultFont,asciiFont,latinFont]=fonts;switch(fontSet){case\"us-ascii\":return asciiFont;case\"latin\":return latinFont;default:return defaultFont;}}var fontFace=fontSet=>{var font500=getFontSrc(fontSet,[_fonts_inter_Inter_Medium_woff2__WEBPACK_IMPORTED_MODULE_1___default.a,_fonts_inter_Inter_Medium_US_ASCII_woff2__WEBPACK_IMPORTED_MODULE_4___default.a,_fonts_inter_Inter_Medium_LATIN_woff2__WEBPACK_IMPORTED_MODULE_7___default.a]);var font600=getFontSrc(fontSet,[_fonts_inter_Inter_SemiBold_woff2__WEBPACK_IMPORTED_MODULE_3___default.a,_fonts_inter_Inter_SemiBold_US_ASCII_woff2__WEBPACK_IMPORTED_MODULE_6___default.a,_fonts_inter_Inter_SemiBold_LATIN_woff2__WEBPACK_IMPORTED_MODULE_9___default.a]);var font700=getFontSrc(fontSet,[_fonts_inter_Inter_Bold_woff2__WEBPACK_IMPORTED_MODULE_2___default.a,_fonts_inter_Inter_Bold_US_ASCII_woff2__WEBPACK_IMPORTED_MODULE_5___default.a,_fonts_inter_Inter_Bold_LATIN_woff2__WEBPACK_IMPORTED_MODULE_8___default.a]);return(/*#__PURE__*/Object(_emotion_core__WEBPACK_IMPORTED_MODULE_0__[\"css\"])(\"@font-face{font-family:\\\"Inter\\\";font-style:normal;font-weight:500;font-display:swap;src:url(\",font500,\") format(\\\"woff2\\\");}@font-face{font-family:\\\"Inter\\\";font-style:normal;font-weight:600;font-display:swap;src:url(\",font600,\") format(\\\"woff2\\\");}@font-face{font-family:\\\"Inter\\\";font-style:normal;font-weight:700;font-display:swap;src:url(\",font700,\") format(\\\"woff2\\\");}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")));};var accessibilitySettings= false?undefined:{name:\"1rj0s3q-accessibilitySettings\",styles:\"@media (prefers-reduced-motion:reduce){*{animation-duration:0s !important;transition-duration:0s !important;}};label:accessibilitySettings;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var elementBase=colors=>/*#__PURE__*/Object(_emotion_core__WEBPACK_IMPORTED_MODULE_0__[\"css\"])(\"main{display:block;}h1{}h2,h3,h4,h5,h6,.faux-heading{font-feature-settings:\\\"lnum\\\";font-variant-numeric:lining-nums;font-weight:700;letter-spacing:-0.0415625em;line-height:1.25;margin:3.5rem 0 2rem;}h1,.heading-size-1{font-size:2rem;font-weight:800;line-height:1.138888889;}h2,.heading-size-2{font-size:3.2rem;}h3,.heading-size-3{font-size:2.8rem;}h4,.heading-size-4{font-size:2.4rem;}h5,.heading-size-5{font-size:2.1rem;}h6,.heading-size-6{font-size:1.6rem;letter-spacing:0.03125em;text-transform:uppercase;}p{line-height:1.5;margin:0 0 1em 0;}em,i,q,dfn{font-style:italic;}em em,em i,i em,i i,cite em,cite i{font-weight:bolder;}big{font-size:1.2em;}small{font-size:0.75em;}b,strong{font-weight:700;}ins{text-decoration:underline;}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline;}sup{top:-0.5em;}sub{bottom:-0.25em;}abbr,acronym{cursor:help;}address{line-height:1.5;margin:0 0 2rem 0;}hr{}a{color:\",colors.primary,\";text-decoration:underline;}a:hover,a:focus{text-decoration:none;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));var listStyle= false?undefined:{name:\"10pl5cw-listStyle\",styles:\"ul,ol{margin:0 0 3rem 3rem;}ul{list-style:disc;}ul ul{list-style:circle;}ul ul ul{list-style:square;}ol{list-style:decimal;}ol ol{list-style:lower-alpha;}ol ol ol{list-style:lower-roman;}li{line-height:1.5;margin:0.5rem 0 0 2rem;}li > ul,li > ol{margin:1rem 0 0 2rem;}.reset-list-style,.reset-list-style ul,.reset-list-style ol{list-style:none;margin:0;}.reset-list-style li{margin:0;}dt,dd{line-height:1.5;}dt{font-weight:700;}dt + dd{margin-top:0.5rem;}dd + dt{margin-top:1.5rem;};label:listStyle;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var quoteStyle=colors=>/*#__PURE__*/Object(_emotion_core__WEBPACK_IMPORTED_MODULE_0__[\"css\"])(\"blockquote{border-color:\",colors.primary,\";border-style:solid;border-width:0 0 0 0.2rem;color:inherit;font-size:1em;margin:4rem 0;padding:0.5rem 0 0.5rem 2rem;}cite{color:\",colors.gray,\";font-size:1.4rem;font-style:normal;font-weight:600;line-height:1.25;}blockquote cite{display:block;margin:2rem 0 0 0;}blockquote p:last-child{margin:0;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nYXJldGhvc2hlYS80MDNwYWdlMjAyMC9wYWNrYWdlcy9mb3Vyb3RocmVlL3NyYy9jb21wb25lbnRzL3N0eWxlcy9nbG9iYWwtc3R5bGVzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdYZ0MiLCJmaWxlIjoiL1VzZXJzL2dhcmV0aG9zaGVhLzQwM3BhZ2UyMDIwL3BhY2thZ2VzL2ZvdXJvdGhyZWUvc3JjL2NvbXBvbmVudHMvc3R5bGVzL2dsb2JhbC1zdHlsZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tIFwiZnJvbnRpdHlcIjtcbmltcG9ydCBJbnRlck1lZGl1bSBmcm9tIFwiLi4vLi4vZm9udHMvaW50ZXIvSW50ZXItTWVkaXVtLndvZmYyXCI7XG5pbXBvcnQgSW50ZXJCb2xkIGZyb20gXCIuLi8uLi9mb250cy9pbnRlci9JbnRlci1Cb2xkLndvZmYyXCI7XG5pbXBvcnQgSW50ZXJTZW1pQm9sZCBmcm9tIFwiLi4vLi4vZm9udHMvaW50ZXIvSW50ZXItU2VtaUJvbGQud29mZjJcIjtcbmltcG9ydCBJbnRlck1lZGl1bVVTIGZyb20gXCIuLi8uLi9mb250cy9pbnRlci9JbnRlci1NZWRpdW0tVVMtQVNDSUkud29mZjJcIjtcbmltcG9ydCBJbnRlckJvbGRVUyBmcm9tIFwiLi4vLi4vZm9udHMvaW50ZXIvSW50ZXItQm9sZC1VUy1BU0NJSS53b2ZmMlwiO1xuaW1wb3J0IEludGVyU2VtaUJvbGRVUyBmcm9tIFwiLi4vLi4vZm9udHMvaW50ZXIvSW50ZXItU2VtaUJvbGQtVVMtQVNDSUkud29mZjJcIjtcbmltcG9ydCBJbnRlck1lZGl1bUxhdGluIGZyb20gXCIuLi8uLi9mb250cy9pbnRlci9JbnRlci1NZWRpdW0tTEFUSU4ud29mZjJcIjtcbmltcG9ydCBJbnRlckJvbGRMYXRpbiBmcm9tIFwiLi4vLi4vZm9udHMvaW50ZXIvSW50ZXItQm9sZC1MQVRJTi53b2ZmMlwiO1xuaW1wb3J0IEludGVyU2VtaUJvbGRMYXRpbiBmcm9tIFwiLi4vLi4vZm9udHMvaW50ZXIvSW50ZXItU2VtaUJvbGQtTEFUSU4ud29mZjJcIjtcbmltcG9ydCBJbWFnZUJHIGZyb20gJy4vaW1hZ2ViZy5wbmcnO1xuXG5jb25zdCBjc3NSZXNldCA9IGNzc2BcbiAgaHRtbCxcbiAgYm9keSB7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG5cbiAgaDEsXG4gIGgyLFxuICBoMyxcbiAgaDQsXG4gIGg1LFxuICBoNixcbiAgcCxcbiAgYmxvY2txdW90ZSxcbiAgYWRkcmVzcyxcbiAgYmlnLFxuICBjaXRlLFxuICBjb2RlLFxuICBlbSxcbiAgZm9udCxcbiAgaW1nLFxuICBzbWFsbCxcbiAgc3RyaWtlLFxuICBzdWIsXG4gIHN1cCxcbiAgbGksXG4gIG9sLFxuICB1bCxcbiAgZmllbGRzZXQsXG4gIGZvcm0sXG4gIGxhYmVsLFxuICBsZWdlbmQsXG4gIGJ1dHRvbixcbiAgdGFibGUsXG4gIGNhcHRpb24sXG4gIHRyLFxuICB0aCxcbiAgdGQge1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgdGV4dC1hbGlnbjogaW5oZXJpdDtcbiAgfVxuXG4gIGJsb2NrcXVvdGU6OmJlZm9yZSxcbiAgYmxvY2txdW90ZTo6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gIH1cblxuICBhLFxuICBwYXRoIHtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4xNXMgbGluZWFyO1xuICB9XG5gO1xuXG5jb25zdCBkb2N1bWVudFNldHVwID0gY29sb3JzID0+IGNzc2BcbiAgaHRtbCB7XG4gICAgZm9udC1zaXplOiA2Mi41JTsgLyogMXJlbSA9IDEwcHggKi9cbiAgfVxuXG4gIGJvZHkge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChzdGF0aWMvaW1hZ2VzL2ltYWdlYmcucG5nKSB3aWR0aD1cIjEwMCVcIjtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogZml4ZWQ7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICBmb250LWZhbWlseTogXCJJbnRlclwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiSGVsdmV0aWNhIE5ldWVcIixcbiAgICAgIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDEuOHJlbTtcbiAgICBsZXR0ZXItc3BhY2luZzogLTAuMDE1ZW07XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgfVxuXG4gICosXG4gICo6OmJlZm9yZSxcbiAgKjo6YWZ0ZXIge1xuICAgIGJveC1zaXppbmc6IGluaGVyaXQ7XG4gICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gICAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gIH1cblxuICAjc2l0ZS1jb250ZW50IHtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICB9XG5gO1xuXG5mdW5jdGlvbiBnZXRGb250U3JjKGZvbnRTZXQsIGZvbnRzKSB7XG4gIGNvbnN0IFtkZWZhdWx0Rm9udCwgYXNjaWlGb250LCBsYXRpbkZvbnRdID0gZm9udHM7XG4gIHN3aXRjaCAoZm9udFNldCkge1xuICAgIGNhc2UgXCJ1cy1hc2NpaVwiOlxuICAgICAgcmV0dXJuIGFzY2lpRm9udDtcbiAgICBjYXNlIFwibGF0aW5cIjpcbiAgICAgIHJldHVybiBsYXRpbkZvbnQ7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBkZWZhdWx0Rm9udDtcbiAgfVxufVxuXG5jb25zdCBmb250RmFjZSA9IGZvbnRTZXQgPT4ge1xuICBjb25zdCBmb250NTAwID0gZ2V0Rm9udFNyYyhmb250U2V0LCBbXG4gICAgSW50ZXJNZWRpdW0sXG4gICAgSW50ZXJNZWRpdW1VUyxcbiAgICBJbnRlck1lZGl1bUxhdGluXG4gIF0pO1xuXG4gIGNvbnN0IGZvbnQ2MDAgPSBnZXRGb250U3JjKGZvbnRTZXQsIFtcbiAgICBJbnRlclNlbWlCb2xkLFxuICAgIEludGVyU2VtaUJvbGRVUyxcbiAgICBJbnRlclNlbWlCb2xkTGF0aW5cbiAgXSk7XG5cbiAgY29uc3QgZm9udDcwMCA9IGdldEZvbnRTcmMoZm9udFNldCwgW0ludGVyQm9sZCwgSW50ZXJCb2xkVVMsIEludGVyQm9sZExhdGluXSk7XG5cbiAgcmV0dXJuIGNzc2BcbiAgICBAZm9udC1mYWNlIHtcbiAgICAgIGZvbnQtZmFtaWx5OiBcIkludGVyXCI7XG4gICAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICAgICAgc3JjOiB1cmwoJHtmb250NTAwfSkgZm9ybWF0KFwid29mZjJcIik7XG4gICAgfVxuXG4gICAgQGZvbnQtZmFjZSB7XG4gICAgICBmb250LWZhbWlseTogXCJJbnRlclwiO1xuICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgICAgIHNyYzogdXJsKCR7Zm9udDYwMH0pIGZvcm1hdChcIndvZmYyXCIpO1xuICAgIH1cblxuICAgIEBmb250LWZhY2Uge1xuICAgICAgZm9udC1mYW1pbHk6IFwiSW50ZXJcIjtcbiAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgICBmb250LWRpc3BsYXk6IHN3YXA7XG4gICAgICBzcmM6IHVybCgke2ZvbnQ3MDB9KSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgICB9XG4gIGA7XG59O1xuXG5jb25zdCBhY2Nlc3NpYmlsaXR5U2V0dGluZ3MgPSBjc3NgXG4gIEBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjogcmVkdWNlKSB7XG4gICAgKiB7XG4gICAgICBhbmltYXRpb24tZHVyYXRpb246IDBzICFpbXBvcnRhbnQ7XG4gICAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwcyAhaW1wb3J0YW50O1xuICAgIH1cbiAgfVxuYDtcblxuY29uc3QgZWxlbWVudEJhc2UgPSBjb2xvcnMgPT4gY3NzYFxuICBtYWluIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gIGgxIHt9XG4gIGgyLFxuICBoMyxcbiAgaDQsXG4gIGg1LFxuICBoNixcbiAgLmZhdXgtaGVhZGluZyB7XG4gICAgZm9udC1mZWF0dXJlLXNldHRpbmdzOiBcImxudW1cIjtcbiAgICBmb250LXZhcmlhbnQtbnVtZXJpYzogbGluaW5nLW51bXM7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBsZXR0ZXItc3BhY2luZzogLTAuMDQxNTYyNWVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjI1O1xuICAgIG1hcmdpbjogMy41cmVtIDAgMnJlbTtcbiAgfVxuXG4gIGgxLFxuICAuaGVhZGluZy1zaXplLTEge1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICBmb250LXdlaWdodDogODAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjEzODg4ODg4OTtcbiAgfVxuXG4gIGgyLFxuICAuaGVhZGluZy1zaXplLTIge1xuICAgIGZvbnQtc2l6ZTogMy4ycmVtO1xuICB9XG5cbiAgaDMsXG4gIC5oZWFkaW5nLXNpemUtMyB7XG4gICAgZm9udC1zaXplOiAyLjhyZW07XG4gIH1cblxuICBoNCxcbiAgLmhlYWRpbmctc2l6ZS00IHtcbiAgICBmb250LXNpemU6IDIuNHJlbTtcbiAgfVxuXG4gIGg1LFxuICAuaGVhZGluZy1zaXplLTUge1xuICAgIGZvbnQtc2l6ZTogMi4xcmVtO1xuICB9XG5cbiAgaDYsXG4gIC5oZWFkaW5nLXNpemUtNiB7XG4gICAgZm9udC1zaXplOiAxLjZyZW07XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMDMxMjVlbTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB9XG5cbiAgcCB7XG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgICBtYXJnaW46IDAgMCAxZW0gMDtcbiAgfVxuXG4gIGVtLFxuICBpLFxuICBxLFxuICBkZm4ge1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgfVxuXG4gIGVtIGVtLFxuICBlbSBpLFxuICBpIGVtLFxuICBpIGksXG4gIGNpdGUgZW0sXG4gIGNpdGUgaSB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbiAgfVxuXG4gIGJpZyB7XG4gICAgZm9udC1zaXplOiAxLjJlbTtcbiAgfVxuXG4gIHNtYWxsIHtcbiAgICBmb250LXNpemU6IDAuNzVlbTtcbiAgfVxuXG4gIGIsXG4gIHN0cm9uZyB7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgfVxuXG4gIGlucyB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIH1cblxuICBzdWIsXG4gIHN1cCB7XG4gICAgZm9udC1zaXplOiA3NSU7XG4gICAgbGluZS1oZWlnaHQ6IDA7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgfVxuXG4gIHN1cCB7XG4gICAgdG9wOiAtMC41ZW07XG4gIH1cblxuICBzdWIge1xuICAgIGJvdHRvbTogLTAuMjVlbTtcbiAgfVxuXG4gIGFiYnIsXG4gIGFjcm9ueW0ge1xuICAgIGN1cnNvcjogaGVscDtcbiAgfVxuXG4gIGFkZHJlc3Mge1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gICAgbWFyZ2luOiAwIDAgMnJlbSAwO1xuICB9XG5cbiAgaHIge1xuXG4gIH1cblxuICBhIHtcbiAgICBjb2xvcjogJHtjb2xvcnMucHJpbWFyeX07XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIH1cblxuICBhOmhvdmVyLFxuICBhOmZvY3VzIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIH1cbmA7XG5cbmNvbnN0IGxpc3RTdHlsZSA9IGNzc2BcbiAgdWwsXG4gIG9sIHtcbiAgICBtYXJnaW46IDAgMCAzcmVtIDNyZW07XG4gIH1cblxuICB1bCB7XG4gICAgbGlzdC1zdHlsZTogZGlzYztcbiAgfVxuXG4gIHVsIHVsIHtcbiAgICBsaXN0LXN0eWxlOiBjaXJjbGU7XG4gIH1cblxuICB1bCB1bCB1bCB7XG4gICAgbGlzdC1zdHlsZTogc3F1YXJlO1xuICB9XG5cbiAgb2wge1xuICAgIGxpc3Qtc3R5bGU6IGRlY2ltYWw7XG4gIH1cblxuICBvbCBvbCB7XG4gICAgbGlzdC1zdHlsZTogbG93ZXItYWxwaGE7XG4gIH1cblxuICBvbCBvbCBvbCB7XG4gICAgbGlzdC1zdHlsZTogbG93ZXItcm9tYW47XG4gIH1cblxuICBsaSB7XG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgICBtYXJnaW46IDAuNXJlbSAwIDAgMnJlbTtcbiAgfVxuXG4gIGxpID4gdWwsXG4gIGxpID4gb2wge1xuICAgIG1hcmdpbjogMXJlbSAwIDAgMnJlbTtcbiAgfVxuXG4gIC5yZXNldC1saXN0LXN0eWxlLFxuICAucmVzZXQtbGlzdC1zdHlsZSB1bCxcbiAgLnJlc2V0LWxpc3Qtc3R5bGUgb2wge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgbWFyZ2luOiAwO1xuICB9XG5cbiAgLnJlc2V0LWxpc3Qtc3R5bGUgbGkge1xuICAgIG1hcmdpbjogMDtcbiAgfVxuXG4gIGR0LFxuICBkZCB7XG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgfVxuXG4gIGR0IHtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICB9XG5cbiAgZHQgKyBkZCB7XG4gICAgbWFyZ2luLXRvcDogMC41cmVtO1xuICB9XG5cbiAgZGQgKyBkdCB7XG4gICAgbWFyZ2luLXRvcDogMS41cmVtO1xuICB9XG5gO1xuXG5jb25zdCBxdW90ZVN0eWxlID0gY29sb3JzID0+IGNzc2BcbiAgYmxvY2txdW90ZSB7XG4gICAgYm9yZGVyLWNvbG9yOiAke2NvbG9ycy5wcmltYXJ5fTtcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuXG4gICAgLypydGw6aWdub3JlKi9cbiAgICBib3JkZXItd2lkdGg6IDAgMCAwIDAuMnJlbTtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IDFlbTtcbiAgICBtYXJnaW46IDRyZW0gMDtcblxuICAgIC8qcnRsOmlnbm9yZSovXG4gICAgcGFkZGluZzogMC41cmVtIDAgMC41cmVtIDJyZW07XG4gIH1cblxuICBjaXRlIHtcbiAgICBjb2xvcjogJHtjb2xvcnMuZ3JheX07XG4gICAgZm9udC1zaXplOiAxLjRyZW07XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgbGluZS1oZWlnaHQ6IDEuMjU7XG4gIH1cblxuICBibG9ja3F1b3RlIGNpdGUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogMnJlbSAwIDAgMDtcbiAgfVxuXG4gIGJsb2NrcXVvdGUgcDpsYXN0LWNoaWxkIHtcbiAgICBtYXJnaW46IDA7XG4gIH1cbmA7XG5cbmNvbnN0IGNvZGVTdHlsZSA9IGNvbG9ycyA9PiBjc3NgXG4gIGNvZGUsXG4gIGtiZCxcbiAgcHJlLFxuICBzYW1wIHtcbiAgICBmb250LWZhbWlseTogbW9ub3NwYWNlO1xuICAgIGZvbnQtc2l6ZTogMC45ZW07XG4gICAgcGFkZGluZzogMC40cmVtIDAuNnJlbTtcbiAgfVxuXG4gIGNvZGUsXG4gIGtiZCxcbiAgc2FtcCB7XG4gICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjA3NSk7XG4gICAgYm9yZGVyLXJhZGl1czogMC4ycmVtO1xuICB9XG5cbiAgcHJlIHtcbiAgICBib3JkZXI6IDAuMXJlbSBzb2xpZCAke2NvbG9ycy5ncmF5LmxpZ2h0fTtcbiAgICBsaW5lLWhlaWdodDogMS41O1xuICAgIG1hcmdpbjogNHJlbSAwO1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIHBhZGRpbmc6IDNyZW0gMnJlbTtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB9XG5cbiAgcHJlIGNvZGUge1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cbmA7XG5cbmNvbnN0IG1lZGlhU3R5bGUgPSBjb2xvcnMgPT4gY3NzYFxuICBmaWd1cmUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogMDtcbiAgfVxuXG4gIGlmcmFtZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG5cbiAgdmlkZW8ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG5cbiAgc3ZnLFxuICBpbWcsXG4gIGVtYmVkLFxuICBvYmplY3Qge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGhlaWdodDogYXV0bztcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gIH1cblxuICBmaWdjYXB0aW9uLFxuICAud3AtY2FwdGlvbi10ZXh0IHtcbiAgICBjb2xvcjogJHtjb2xvcnMuZ3JheS5iYXNlfTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjI7XG4gICAgbWFyZ2luLXRvcDogMS41cmVtO1xuICB9XG5cbiAgZmlnY2FwdGlvbiBhLFxuICAud3AtY2FwdGlvbi10ZXh0IGEge1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICB9XG5gO1xuXG5jb25zdCB0YWJsZVN0eWxlcyA9IGNvbG9ycyA9PiBjc3NgXG4gIHRhYmxlIHtcbiAgICBib3JkZXI6IDAuMXJlbSBzb2xpZCAke2NvbG9ycy5ncmF5LmxpZ2h0fTtcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICAgIGJvcmRlci1zcGFjaW5nOiAwO1xuICAgIGVtcHR5LWNlbGxzOiBzaG93O1xuICAgIGZvbnQtc2l6ZTogMS42cmVtO1xuICAgIG1hcmdpbjogNHJlbSAwO1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG5cbiAgLmFsaWdubGVmdCA+IHRhYmxlIHtcbiAgICBtYXJnaW46IDA7XG4gIH1cblxuICAuYWxpZ25yaWdodCA+IHRhYmxlIHtcbiAgICBtYXJnaW46IDA7XG4gIH1cblxuICB0aCxcbiAgdGQge1xuICAgIGJvcmRlcjogMC4xcmVtIHNvbGlkICR7Y29sb3JzLmdyYXkubGlnaHR9O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gICAgbWFyZ2luOiAwO1xuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgIHBhZGRpbmc6IDAuNWVtO1xuICB9XG5cbiAgY2FwdGlvbiB7XG4gICAgYmFja2dyb3VuZDogJHtjb2xvcnMuZ3JheS5saWdodH07XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICBwYWRkaW5nOiAwLjVlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cblxuICB0aGVhZCB7XG4gICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB9XG5cbiAgdGgge1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIH1cbmA7XG5cbmNvbnN0IGdsb2JhbFN0eWxlID0gKGNvbG9ycywgZm9udFNldHMpID0+XG4gIGNzcyhbXG4gICAgY3NzUmVzZXQsXG4gICAgZG9jdW1lbnRTZXR1cChjb2xvcnMpLFxuICAgIGZvbnRGYWNlKGZvbnRTZXRzKSxcbiAgICBhY2Nlc3NpYmlsaXR5U2V0dGluZ3MsXG4gICAgZWxlbWVudEJhc2UoY29sb3JzKSxcbiAgICBsaXN0U3R5bGUsXG4gICAgcXVvdGVTdHlsZShjb2xvcnMpLFxuICAgIGNvZGVTdHlsZShjb2xvcnMpLFxuICAgIG1lZGlhU3R5bGUoY29sb3JzKSxcbiAgICB0YWJsZVN0eWxlcyhjb2xvcnMpXG4gIF0pO1xuXG5leHBvcnQgZGVmYXVsdCBnbG9iYWxTdHlsZTtcbiJdfQ== */\"));var codeStyle=colors=>/*#__PURE__*/Object(_emotion_core__WEBPACK_IMPORTED_MODULE_0__[\"css\"])(\"code,kbd,pre,samp{font-family:monospace;font-size:0.9em;padding:0.4rem 0.6rem;}code,kbd,samp{background:rgba(0,0,0,0.075);border-radius:0.2rem;}pre{border:0.1rem solid \",colors.gray.light,\";line-height:1.5;margin:4rem 0;overflow:auto;padding:3rem 2rem;text-align:left;}pre code{background:transparent;padding:0;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));var mediaStyle=colors=>/*#__PURE__*/Object(_emotion_core__WEBPACK_IMPORTED_MODULE_0__[\"css\"])(\"figure{display:block;margin:0;}iframe{display:block;max-width:100%;}video{display:block;}svg,img,embed,object{display:block;height:auto;max-width:100%;}figcaption,.wp-caption-text{color:\",colors.gray.base,\";display:block;font-size:1.5rem;font-weight:500;line-height:1.2;margin-top:1.5rem;}figcaption a,.wp-caption-text a{color:inherit;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));var tableStyles=colors=>/*#__PURE__*/Object(_emotion_core__WEBPACK_IMPORTED_MODULE_0__[\"css\"])(\"table{border:0.1rem solid \",colors.gray.light,\";border-collapse:collapse;border-spacing:0;empty-cells:show;font-size:1.6rem;margin:4rem 0;max-width:100%;overflow:hidden;width:100%;}.alignleft > table{margin:0;}.alignright > table{margin:0;}th,td{border:0.1rem solid \",colors.gray.light,\";line-height:1.4;margin:0;overflow:visible;padding:0.5em;}caption{background:\",colors.gray.light,\";font-weight:600;padding:0.5em;text-align:center;}thead{vertical-align:bottom;white-space:nowrap;}th{font-weight:700;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));var globalStyle=(colors,fontSets)=>/*#__PURE__*/Object(_emotion_core__WEBPACK_IMPORTED_MODULE_0__[\"css\"])([cssReset,documentSetup(colors),fontFace(fontSets),accessibilitySettings,elementBase(colors),listStyle,quoteStyle(colors),codeStyle(colors),mediaStyle(colors),tableStyles(colors)], false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");/* harmony default export */ __webpack_exports__[\"default\"] = (globalStyle);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/fourothree/src/components/styles/global-styles.js\n");

/***/ })

})